#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

#---------------------------------------------------------------------
# main frontend which proxys to the backends
#---------------------------------------------------------------------
#value的值可为json{"consumes": [], "haproxy": {"path": "test2","site": "www.51tywy.com"}}
#-------80端口转发
frontend website-service
  bind :80
  
  acl is_web_group_sites1 hdr_beg(host)  -i k1664dev.octoapps.com
  use_backend dev_group_sites1 if is_web_group_sites1
  
  default_backend group_default
  mode http



backend dev_group_sites1
  balance roundrobin 
  server a1  127.0.0.1:30012 cookie a1 check inter 1500 rise 3 fall 3 weight 3

backend dev_group_sites2
  # Consumes: []
  balance roundrobin
  



backend group_default
    balance roundrobin
    server service1 127.0.0.1:30012 check


listen stats
    bind *:8099
    stats enable
    stats hide-version
    stats show-node
    stats uri /stats
    stats auth admin:cyberlink
    stats refresh 5s

